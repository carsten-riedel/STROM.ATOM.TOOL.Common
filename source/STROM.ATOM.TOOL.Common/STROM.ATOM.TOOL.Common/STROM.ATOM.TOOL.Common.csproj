<Project Sdk="Microsoft.NET.Sdk">

	<!-- https://learn.microsoft.com/de-de/dotnet/core/tools/global-tools-how-to-create -->

	<!-- dotnet tool list -g -->

	<PropertyGroup>
		<NoWarn>$(NoWarn);NETSDK1138</NoWarn>
	</PropertyGroup>

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net8.0</TargetFramework>
		<TargetFrameworks>net5.0;net6.0;net7.0;net8.0;net9.0</TargetFrameworks>
		<SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
	</PropertyGroup>

	<PropertyGroup>
		<IsPackable>true</IsPackable>
		<IsPublishable>true</IsPublishable>
		<IsTestProject>false</IsTestProject>
		<PackAsTool>true</PackAsTool>
	</PropertyGroup>

	<PropertyGroup>
		<VersionBuild>0</VersionBuild>
		<VersionMajor>2</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionRevision>0</VersionRevision>
		<AssemblyVersion>$(VersionBuild).$(VersionMajor).$(VersionMinor).$(VersionRevision)</AssemblyVersion>
		<Version>$(VersionBuild).$(VersionMajor).$(VersionMinor).$(VersionRevision)$(VersionSuffix)</Version>
	</PropertyGroup>
	
	<PropertyGroup>
		
		<ImplicitUsings>disable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<DebugType>embedded</DebugType>
		
		<!-- Enable unsafe code -->
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>

		<Copyright>Copyright © 2025 Carsten Riedel</Copyright>
		<Company></Company>
		
	</PropertyGroup>

	<PropertyGroup Condition="'$(PackAsTool)' == 'true' ">
		<ToolCommandName>satcom</ToolCommandName>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Stage)' == 'pack'">

		<OutputPackDir Condition="'$(OutputRootPackDirectory)' != ''">$(OutputRootPackDirectory)</OutputPackDir>
		<OutputPackDir Condition="'$(OutputRootPackDirectory)' == ''">$(MSBuildThisFileDirectory)bin\Output\pack\$(AssemblyName)</OutputPackDir>
		<PackageOutputPath>$(OutputPackDir)</PackageOutputPath>
		
		<Authors>Carsten Riedel</Authors>
		<Owners>Carsten Riedel</Owners>
		<PackageId>$(AssemblyName)</PackageId>
		<PackageTags>dotnet;tool;STROM;satcom</PackageTags>
		<PackageProjectUrl>https://github.com/carsten-riedel/STROM.ATOM.TOOL.Common</PackageProjectUrl>
		<RepositoryUrl>https://github.com/carsten-riedel/STROM.ATOM.TOOL.Common</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<Description>
			<![CDATA[STROM.ATOM.TOOL.Common is a multi-purpose command-line .NET tool, containing a suite of helper functionalities.]]>
		</Description>
		<PackageReadmeFile>Readme.md</PackageReadmeFile>
		<PackageLicenseFile>License.txt</PackageLicenseFile>
		<PackageIcon>STROM128.png</PackageIcon>
		<PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildThisFileDirectory)AddPackageFiles\ReleaseNotes.txt"))</PackageReleaseNotes>
	</PropertyGroup>

	<!-- In pack add additional files to the package root directory of the nuget. -->
	<ItemGroup Condition="'$(Stage)' == 'pack'">
		<None Include="$(MSBuildProjectDirectory)\AddPackageFiles\**\*" Exclude="$(MSBuildProjectDirectory)\AddPackageFiles\ReleaseNotes.txt" Pack="true" PackagePath="" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Stage)' == 'publish'">
		<!-- Specify the target runtime; adjust as needed (e.g., win-x86, linux-x64) -->
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<OutputPubDir Condition="'$(OutputRootPublishDirectory)' != ''">$(OutputRootPublishDirectory)</OutputPubDir>
		<OutputPubDir Condition="'$(OutputRootPublishDirectory)' == ''">$(MSBuildThisFileDirectory)\bin\Output\publish\$(AssemblyName)</OutputPubDir>
		<PublishDir>$(OutputPubDir)</PublishDir>
		
		<SelfContained Condition="">true</SelfContained>
		<!-- Enable single-file publish -->
		<PublishSingleFile>true</PublishSingleFile>
		<!-- Enable compression to reduce the size of the single-file executable -->
		<EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
		<!-- Ensure native libraries are extracted at runtime -->
		<IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
	</PropertyGroup>

	<Target Name="RenamePublishedExe" AfterTargets="Publish" Condition="'$(PackAsTool)' == 'true' ">
		<PropertyGroup>
			<NewExeName>$(ToolCommandName).exe</NewExeName>
		</PropertyGroup>

		<!-- Locate the original exe output -->
		<ItemGroup>
			<PublishedExe Include="$(PublishDir)$(AssemblyName).exe" Condition="Exists('$(PublishDir)$(AssemblyName).exe')" />
		</ItemGroup>

		<Message Text="Renaming $(AssemblyName).exe to $(NewExeName) in $(PublishDir)" Importance="High" />

		<!-- Rename (move) the exe -->
		<Move SourceFiles="@(PublishedExe)" DestinationFiles="$(PublishDir)$(NewExeName)" />
	</Target>


	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.2" />
		<PackageReference Include="Serilog" Version="4.2.0" />
		<PackageReference Include="Serilog.Extensions.Hosting" Version="9.0.0" />
		<PackageReference Include="Serilog.Sinks.Async" Version="2.1.0" />
		<PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
		<PackageReference Include="Spectre.Console" Version="0.49.1" />
		<PackageReference Include="Spectre.Console.Cli" Version="0.49.1" />
		<PackageReference Include="System.Text.Json" Version="9.0.2" />
	</ItemGroup>

</Project>
